{"ast":null,"code":"import _slicedToArray from\"/home/user/Documents/gala-bori/gala-bori.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useNavigate,useSearchParams}from'react-router-dom';import{useState,useEffect}from'react';import{AgGridReact}from\"ag-grid-react\";import\"ag-grid-community/styles/ag-grid.css\";import\"ag-grid-community/styles/ag-theme-balham.css\";import{Button}from'reactstrap';import Chart from'./Chart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Actor(){var _actor$roles;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),actor=_useState2[0],setActor=_useState2[1];var navigate=useNavigate();var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];var personId=searchParams.get(\"ID\");//Get the actorID from the URL\nvar url=\"http://sefdb02.qut.edu.au:3000/people/\".concat(personId);var bearerToken=localStorage.getItem(\"token\");// get the token from localStorage\nuseEffect(function(){//Sends token to allow authorisation and attempts to return actor data\nfetch(url,{headers:{\"Authorization\":\"Bearer \".concat(bearerToken),\"accept\":\"application/json\"}}).then(function(response){if(response.status===200){return response.json();}else if(response.status===400){throw new Error(\"Invalid query parameters\");}else if(response.status===401){throw new Error(\"Unauthorized\");}else if(response.status===404){throw new Error(\"Requested actor cannot be found\");}else if(response.status===429){throw new Error(\"Rate limit exceeded\");}else{throw new Error(\"Unknown error occurred\");}}).then(function(data){setActor(data);}).catch(function(error){console.error(error);alert(error.message);// display window alert for any error\n});},[url,bearerToken]);var columns=[//Define columns for Ag Grid Table\n{headerName:\"Role\",field:\"category\",sortable:true,width:\"flex\"},{headerName:\"Movie Name\",field:\"movieName\",sortable:true,width:300},{headerName:\"Characters\",field:\"characters\",sortable:true},{headerName:\"IMDb Rating\",field:\"imdbRating\",sortable:true}];var rowData=actor.roles?actor.roles.map(function(role){return{//Map returned data to table\nmovieId:role.movieId,movieName:role.movieName,category:role.category||\"N/A\",imdbRating:role.imdbRating||\"N/A\",characters:role.characters.join(\", \")||\"N/A\"};}):[];return/*#__PURE__*/ (//Renders Ag Grid table and static boxplot image and back button\n_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",overflow:\"hidden\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:actor.name}),/*#__PURE__*/_jsxs(\"p\",{children:[actor.birthYear||\"N/A\",\"\\u2014\",actor.deathYear||\"—\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a movie...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ag-theme-balham\",style:{width:\"900px\",overflow:\"hidden\"},children:/*#__PURE__*/_jsx(AgGridReact,{columnDefs:columns,rowData:rowData,rowHeight:25,headerHeight:40,domLayout:\"autoHeight\",onRowClicked:function onRowClicked(row){return navigate(\"/Movie?imdbID=\".concat(row.data.movieId));},suppressHorizontalScroll:true,suppressBrowserResizeObserver:true})}),/*#__PURE__*/_jsx(Chart,{ratings:((_actor$roles=actor.roles)===null||_actor$roles===void 0?void 0:_actor$roles.map(function(role){return role.imdbRating;}))||[],personName:actor.name}),/*#__PURE__*/_jsx(Button,{color:\"info\",size:\"sm\",className:\"mt-3\",onClick:function onClick(){return navigate(-1);},children:\"Back\"})]}));}export default Actor;","map":{"version":3,"names":["useNavigate","useSearchParams","useState","useEffect","AgGridReact","Button","Chart","jsx","_jsx","jsxs","_jsxs","Actor","_actor$roles","_useState","_useState2","_slicedToArray","actor","setActor","navigate","_useSearchParams","_useSearchParams2","searchParams","personId","get","url","concat","bearerToken","localStorage","getItem","fetch","headers","then","response","status","json","Error","data","catch","error","console","alert","message","columns","headerName","field","sortable","width","rowData","roles","map","role","movieId","movieName","category","imdbRating","characters","join","style","display","flexDirection","alignItems","overflow","children","name","birthYear","deathYear","className","columnDefs","rowHeight","headerHeight","domLayout","onRowClicked","row","suppressHorizontalScroll","suppressBrowserResizeObserver","ratings","personName","color","size","onClick"],"sources":["/home/user/Documents/gala-bori/gala-bori.github.io/src/components/Actor.js"],"sourcesContent":["import { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-balham.css\";\nimport { Button } from 'reactstrap';\nimport Chart from './Chart';\n\nfunction Actor() {\n  const [actor, setActor] = useState({});\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const personId = searchParams.get(\"ID\"); //Get the actorID from the URL\n  const url = `http://sefdb02.qut.edu.au:3000/people/${personId}`;\n  const bearerToken = localStorage.getItem(\"token\"); // get the token from localStorage\n\n  useEffect(() => { //Sends token to allow authorisation and attempts to return actor data\n    fetch(url, {\n      headers: {\n        \"Authorization\": `Bearer ${bearerToken}`,\n        \"accept\": \"application/json\"\n      }\n    })\n      .then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else if (response.status === 400) {\n          throw new Error(\"Invalid query parameters\");\n        } else if (response.status === 401) {\n          throw new Error(\"Unauthorized\");\n        } else if (response.status === 404) {\n          throw new Error(\"Requested actor cannot be found\");\n        } else if (response.status === 429) {\n          throw new Error(\"Rate limit exceeded\");\n        } else {\n          throw new Error(\"Unknown error occurred\");\n        }\n      })\n      .then(data => {\n        setActor(data);\n      })\n      .catch(error => {\n        console.error(error);\n        alert(error.message); // display window alert for any error\n      });\n  }, [url, bearerToken]);\n\n  const columns = [ //Define columns for Ag Grid Table\n    { headerName: \"Role\", field: \"category\", sortable: true, width: \"flex\" },\n    { headerName: \"Movie Name\", field: \"movieName\", sortable: true, width: 300 },\n    { headerName: \"Characters\", field: \"characters\", sortable: true },\n    { headerName: \"IMDb Rating\", field: \"imdbRating\", sortable: true }\n  ];\n\n  const rowData = actor.roles ? actor.roles.map(role => ({ //Map returned data to table\n    movieId: role.movieId,\n    movieName: role.movieName,\n    category: role.category || \"N/A\",\n    imdbRating: role.imdbRating || \"N/A\",\n    characters: role.characters.join(\", \") || \"N/A\"\n  })) : [];\n\n    return ( //Renders Ag Grid table and static boxplot image and back button\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", overflow: \"hidden\" }}>\n      <h2>{actor.name}</h2>\n      <p>{actor.birthYear || \"N/A\"}—{actor.deathYear || \"—\"}</p>\n      <p>Select a movie...</p>\n\n      <div\n        className=\"ag-theme-balham\"\n        style={{ width: \"900px\", overflow: \"hidden\" }}\n      >\n        <AgGridReact\n          columnDefs={columns}\n          rowData={rowData}\n          rowHeight={25}\n          headerHeight={40}\n          domLayout=\"autoHeight\"\n          onRowClicked={row => navigate(`/Movie?imdbID=${row.data.movieId}`)}\n          suppressHorizontalScroll={true}\n          suppressBrowserResizeObserver={true}\n        />\n      </div>\n      <Chart ratings={actor.roles?.map(role => role.imdbRating) || []} personName={actor.name} />\n      <Button\n        color=\"info\"\n        size=\"sm\"\n        className=\"mt-3\"\n        onClick={() => navigate(-1)}\n      >\n        Back\n      </Button>\n    </div>\n  );\n}\n\nexport default Actor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}