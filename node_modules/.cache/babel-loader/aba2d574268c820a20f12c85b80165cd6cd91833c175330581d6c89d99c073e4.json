{"ast":null,"code":"import _slicedToArray from\"/home/user/Documents/gala-bori/gala-bori.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{Button}from'reactstrap';import'bootstrap';import'./App.css';import{BrowserRouter,Routes,Route,Link}from'react-router-dom';import\"ag-grid-community/styles/ag-grid.css\";import\"ag-grid-community/styles/ag-theme-balham.css\";import Movie from\"./components/Movie\";import Login from\"./authentification/Login\";import Register from\"./authentification/Register\";import Actor from\"./components/Actor\";import Home from\"./components/Home\";import Movies from\"./components/Movies\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,1),bearerToken=_useState4[0];var email=localStorage.getItem('email');var API_URL='http://sefdb02.qut.edu.au:3000';useEffect(function(){//Probably not the greatest\nvar token=localStorage.getItem('token');var refreshToken=localStorage.getItem('refreshToken');var storedEmail=localStorage.getItem('email');if(token&&refreshToken&&storedEmail){setIsLoggedIn(true);}},[]);var handleLogin=function handleLogin(){setIsLoggedIn(true);setInterval(function(){//Automatically performs POST of refreshToken and updates stored tokens after 590 seconds\nvar refreshToken=localStorage.getItem('refreshToken');var url=\"\".concat(API_URL,\"/user/refresh\");fetch(url,{method:'POST',headers:{accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({refreshToken:refreshToken})}).then(function(res){return res.json();}).then(function(data){//Extract, set tokens and store tokens\nvar newToken=data.bearerToken.token;var newRefreshToken=data.refreshToken.token;// setBearerToken(newToken);\n// setRefreshToken(newRefreshToken);\nlocalStorage.setItem('token',newToken);localStorage.setItem('refreshToken',newRefreshToken);}).catch(function(error){console.log(error);});},590000);// 590 seconds just in case...\n};var handleLogout=function handleLogout(){//Removes tokens, email, stored loggedin variable and redirects user\nsetIsLoggedIn(false);localStorage.removeItem(\"token\");localStorage.removeItem(\"isLoggedIn\");localStorage.removeItem(\"email\");var refreshToken=localStorage.getItem(\"refreshToken\");var url=\"\".concat(API_URL,\"/user/logout\");fetch(url,{method:\"POST\",headers:{accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({refreshToken:refreshToken})}).then(function(res){if(res.status===200){localStorage.removeItem(\"refreshToken\");alert(\"Successfully logged out\");window.location.replace(\"./\");// redirect to the login page upon logout\n}else{throw new Error(\"Logout failed\");}}).catch(function(error){alert(error.message);console.log(error);});};return/*#__PURE__*/ (//Highest level component which renders Home, Movies, Login, Register (Logout) button\n_jsxs(\"div\",{className:\"home-container\",children:[/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/movies\",children:\"Movies\"}),!isLoggedIn&&/*#__PURE__*/ //Display Login and Register if not logged in\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"}),/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register\"})]}),isLoggedIn&&/*#__PURE__*/ //Display username if logged in\n_jsx(\"span\",{className:\"user-email\",children:email}),isLoggedIn&&/*#__PURE__*/ //Dispaly logout button if logged in\n_jsx(Button,{className:\"logout-btn\",size:\"sm\",color:\"info\",onClick:handleLogout,children:\"Logout\"})]})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{isLoggedIn:isLoggedIn,setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/movies\",element:/*#__PURE__*/_jsx(Movies,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{handleLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/movie\",element:/*#__PURE__*/_jsx(Movie,{})}),/*#__PURE__*/_jsx(Route,{path:\"/actor\",element:isLoggedIn?/*#__PURE__*/_jsx(Actor,{bearerToken:bearerToken}):/*#__PURE__*/ //If user logged in, route to Actor page otherwise login\n_jsx(Login,{handleLogin:handleLogin})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"home-container\",children:[isLoggedIn&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Logged in as: \",email]}),/*#__PURE__*/_jsx(\"p\",{children:\"All data is from IMDB, Metacritic and RottenTomatoes.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2023 Gala Bori\"})]})]}));};export default App;","map":{"version":3,"names":["useState","useEffect","Button","BrowserRouter","Routes","Route","Link","Movie","Login","Register","Actor","Home","Movies","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","bearerToken","email","localStorage","getItem","API_URL","token","refreshToken","storedEmail","handleLogin","setInterval","url","concat","fetch","method","headers","accept","body","JSON","stringify","then","res","json","data","newToken","newRefreshToken","setItem","catch","error","console","log","handleLogout","removeItem","status","alert","window","location","replace","Error","message","className","children","to","size","color","onClick","path","element"],"sources":["/home/user/Documents/gala-bori/gala-bori.github.io/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap';\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport \"ag-grid-community/styles/ag-grid.css\"\nimport \"ag-grid-community/styles/ag-theme-balham.css\"\nimport Movie from \"./components/Movie\";\nimport Login from \"./authentification/Login\";\nimport Register from \"./authentification/Register\";\nimport Actor from \"./components/Actor\";\nimport Home from \"./components/Home\";\nimport Movies from \"./components/Movies\";\n\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [bearerToken] = useState('');  \n  const email = localStorage.getItem('email');\n  const API_URL = 'http://sefdb02.qut.edu.au:3000';\n\n  useEffect(() => { //Probably not the greatest\n    const token = localStorage.getItem('token');\n    const refreshToken = localStorage.getItem('refreshToken');\n    const storedEmail = localStorage.getItem('email');\n    if (token && refreshToken && storedEmail) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n\n    setInterval(() => { //Automatically performs POST of refreshToken and updates stored tokens after 590 seconds\n      const refreshToken = localStorage.getItem('refreshToken');\n      const url = `${API_URL}/user/refresh`;\n\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ refreshToken }),\n      })\n        .then((res) => res.json())\n        .then((data) => { //Extract, set tokens and store tokens\n          let newToken = data.bearerToken.token;\n          let newRefreshToken = data.refreshToken.token;\n\n          // setBearerToken(newToken);\n          // setRefreshToken(newRefreshToken);\n\n          localStorage.setItem('token', newToken);\n          localStorage.setItem('refreshToken', newRefreshToken);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }, 590000); // 590 seconds just in case...\n  };\n\n  const handleLogout = () => { //Removes tokens, email, stored loggedin variable and redirects user\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"email\");\n\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    const url = `${API_URL}/user/logout`;\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        refreshToken: refreshToken,\n      }),\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          localStorage.removeItem(\"refreshToken\");\n          alert(\"Successfully logged out\");\n          window.location.replace(\"./\"); // redirect to the login page upon logout\n        } else {\n          throw new Error(\"Logout failed\");\n        }\n      })\n      .catch((error) => {\n        alert(error.message);\n        console.log(error);\n      });\n  };\n\n\n  return ( //Highest level component which renders Home, Movies, Login, Register (Logout) button\n    <div className=\"home-container\">\n      <BrowserRouter>\n        <nav>\n          <div className=\"nav-links\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/movies\">Movies</Link>\n            {!isLoggedIn && ( //Display Login and Register if not logged in\n              <>\n                <Link to=\"/login\">Login</Link>\n                <Link to=\"/register\">Register</Link>\n              </>\n            )}\n            {isLoggedIn && ( //Display username if logged in\n              <span className=\"user-email\">{email}</span>\n            )}\n            {isLoggedIn && ( //Dispaly logout button if logged in\n              <Button className=\"logout-btn\" size=\"sm\" color=\"info\" onClick={handleLogout}>Logout</Button>\n            )}\n          </div>\n        </nav>\n        <Routes> \n          <Route path=\"/\" element={<Home isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />} /> \n          <Route path=\"/movies\" element={<Movies />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route\n            path=\"/login\"\n            element={<Login handleLogin={handleLogin} />}\n          />\n          <Route path=\"/movie\" element={<Movie />} />\n          <Route\n            path=\"/actor\"\n            element={\n              isLoggedIn ? (\n                <Actor bearerToken={bearerToken} />\n              ) : ( //If user logged in, route to Actor page otherwise login\n                <Login handleLogin={handleLogin} />\n              )\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n      <div className=\"home-container\">\n        {isLoggedIn && <p>Logged in as: {email}</p>}\n        <p>All data is from IMDB, Metacritic and RottenTomatoes.</p>\n        <p>&copy; 2023 Gala Bori</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}