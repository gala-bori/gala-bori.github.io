{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/gala-bori/Submission/src/authentification/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = `http://sefdb02.qut.edu.au:3000`;\nfunction Login(_ref) {\n  _s();\n  let {\n    handleLogin\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSuccessfulLogin = () => {\n    alert(`Welcome ${email}!`);\n    handleLogin(); // updates the isLoggedIn state in app.js\n    const currentPath = window.location.pathname;\n    if (currentPath === \"/login\") {\n      // Navigate to movies page IFF loggin in from login page otherwise login (success) > actor page\n      navigate(\"/movies\");\n    }\n  };\n  const handleEmailChange = x => {\n    //Functions to set data when requested by input forms below\n    setEmail(x.target.value);\n  };\n  const handlePasswordChange = x => {\n    setPassword(x.target.value);\n  };\n  const handleSubmit = x => {\n    //Function to POST email/password to API and handle return tokens/errors\n    x.preventDefault();\n    const url = `${API_URL}/user/login`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else if (res.status === 400) {\n        throw new Error(\"Both email and password are required\");\n      } else if (res.status === 401) {\n        throw new Error(\"Incorrect email or password\");\n      } else if (res.status === 429) {\n        throw new Error(\"Too many requests, please try again later.\");\n      } else {\n        throw new Error(\"Login failed\");\n      }\n    }).then(data => {\n      const bearerToken = data.bearerToken.token;\n      const refreshToken = data.refreshToken.token;\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"token\", bearerToken);\n      localStorage.setItem(\"refreshToken\", refreshToken);\n      handleSuccessfulLogin(); //Calls above function and redirects to appropriate page\n    }).catch(error => {\n      alert(error.message);\n      console.log(error); //Display/log any errors\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //Renders two input forms and submit button\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: handleEmailChange,\n            className: \"form-control custom-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: handlePasswordChange,\n            className: \"form-control custom-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","API_URL","Login","_ref","_s","handleLogin","email","setEmail","password","setPassword","navigate","handleSuccessfulLogin","alert","currentPath","window","location","pathname","handleEmailChange","x","target","value","handlePasswordChange","handleSubmit","preventDefault","url","fetch","method","headers","body","JSON","stringify","then","res","status","json","Error","data","bearerToken","token","refreshToken","localStorage","setItem","catch","error","message","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/user/Documents/gala-bori/Submission/src/authentification/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst API_URL = `http://sefdb02.qut.edu.au:3000`;\n\nfunction Login({ handleLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSuccessfulLogin = () => {\n    alert(`Welcome ${email}!`);\n    handleLogin(); // updates the isLoggedIn state in app.js\n    const currentPath = window.location.pathname;\n\n    if (currentPath === \"/login\") {// Navigate to movies page IFF loggin in from login page otherwise login (success) > actor page\n      navigate(\"/movies\");\n    }\n  };\n\n  const handleEmailChange = (x) => { //Functions to set data when requested by input forms below\n    setEmail(x.target.value);\n  };\n\n  const handlePasswordChange = (x) => {\n    setPassword(x.target.value);\n  };\n\n  const handleSubmit = (x) => { //Function to POST email/password to API and handle return tokens/errors\n    x.preventDefault();\n\n    const url = `${API_URL}/user/login`;\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        } else if (res.status === 400) {\n          throw new Error(\"Both email and password are required\");\n        } else if (res.status === 401) {\n          throw new Error(\"Incorrect email or password\");\n        } else if (res.status === 429) {\n          throw new Error(\"Too many requests, please try again later.\");\n        } else {\n          throw new Error(\"Login failed\");\n        }\n      })\n      .then((data) => {\n        const bearerToken = data.bearerToken.token; \n        const refreshToken = data.refreshToken.token; \n        localStorage.setItem(\"email\", email); \n        localStorage.setItem(\"token\", bearerToken); \n        localStorage.setItem(\"refreshToken\", refreshToken); \n\n        handleSuccessfulLogin(); //Calls above function and redirects to appropriate page\n\n      })\n      .catch((error) => {\n        alert(error.message);\n        console.log(error); //Display/log any errors\n      });\n  };\n\n  return ( //Renders two input forms and submit button\n    <div className=\"App\">\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit} className=\"register-form\">\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n            className=\"form-control custom-input\"\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            className=\"form-control custom-input\"\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}