{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/Submission/src/components/Chart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport Plotly from 'plotly.js-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart(_ref) {\n  _s();\n  let {\n    ratings,\n    personName\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const data = [\n    //define data for box plot\n    {\n      x: ratings,\n      type: 'box',\n      name: '',\n      //Remove grouping name\n      boxpoints: 'all',\n      marker: {\n        color: 'rgb(0, 128, 117)'\n      }\n    }];\n    const minRating = Math.min(...ratings);\n    const maxRating = Math.max(...ratings);\n    const layout = {\n      //set layout for boxplot\n      title: `IMDb Ratings Box Plot for ${personName}`,\n      xaxis: {\n        range: [minRating, maxRating]\n      },\n      yaxis: {\n        title: 'IMDb Rating'\n      },\n      staticPlot: true // Disable plot interactivity\n    };\n\n    // Render the plot using data and layout\n    Plotly.newPlot(chartRef.current, data, layout);\n\n    // Generate static boxplot image \n    Plotly.toImage(chartRef.current, {\n      format: 'png',\n      width: 800,\n      height: 400\n    }).then(dataUrl => {\n      const imgElement = document.getElementById('chartImage');\n      imgElement.src = dataUrl;\n\n      // Hide the interactive plot\n      chartRef.current.style.display = 'none';\n    }).catch(error => {\n      console.error('Error generating plot image:', error);\n    });\n  }, [ratings, personName]);\n  return (\n    /*#__PURE__*/\n    //Renders static image of interactive boxplot\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"chartImage\",\n        alt: \"Box Plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Chart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useEffect","useRef","Plotly","jsxDEV","_jsxDEV","Chart","_ref","_s","ratings","personName","chartRef","data","x","type","name","boxpoints","marker","color","minRating","Math","min","maxRating","max","layout","title","xaxis","range","yaxis","staticPlot","newPlot","current","toImage","format","width","height","then","dataUrl","imgElement","document","getElementById","src","style","display","catch","error","console","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","id","alt","_c","$RefreshReg$"],"sources":["/home/user/Downloads/Submission/src/components/Chart.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport Plotly from 'plotly.js-dist';\n\nfunction Chart({ ratings, personName }) {\nconst chartRef = useRef(null);\n\n  useEffect(() => {\n    const data = [ //define data for box plot\n      {\n        x: ratings,\n        type: 'box',\n        name: '', //Remove grouping name\n        boxpoints: 'all',\n        marker:{\n          color: 'rgb(0, 128, 117)'}\n      }\n    ];\n\n    const minRating = Math.min(...ratings);\n    const maxRating = Math.max(...ratings);\n\n    const layout = { //set layout for boxplot\n      title: `IMDb Ratings Box Plot for ${personName}`,\n      xaxis: {\n        range: [minRating, maxRating]\n      },\n      yaxis: {\n        title: 'IMDb Rating'\n      },\n      staticPlot: true // Disable plot interactivity\n    };\n\n    // Render the plot using data and layout\n    Plotly.newPlot(chartRef.current, data, layout);\n\n    // Generate static boxplot image \n    Plotly.toImage(chartRef.current, { format: 'png', width: 800, height: 400 })\n      .then(dataUrl => {\n        const imgElement = document.getElementById('chartImage');\n        imgElement.src = dataUrl;\n\n        // Hide the interactive plot\n        chartRef.current.style.display = 'none';\n      })\n      .catch(error => {\n        console.error('Error generating plot image:', error);\n      });\n  }, [ratings, personName]);\n\n  return ( //Renders static image of interactive boxplot\n    <div>\n      <div ref={chartRef}></div>\n      <img id=\"chartImage\" alt=\"Box Plot\" />\n    </div>\n  );\n}\n\nexport default Chart;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,KAAKA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACtC,MAAMI,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAG;IAAE;IACb;MACEC,CAAC,EAAEJ,OAAO;MACVK,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,EAAE;MAAE;MACVC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAC;QACLC,KAAK,EAAE;MAAkB;IAC7B,CAAC,CACF;IAED,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGZ,OAAO,CAAC;IACtC,MAAMa,SAAS,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGd,OAAO,CAAC;IAEtC,MAAMe,MAAM,GAAG;MAAE;MACfC,KAAK,EAAG,6BAA4Bf,UAAW,EAAC;MAChDgB,KAAK,EAAE;QACLC,KAAK,EAAE,CAACR,SAAS,EAAEG,SAAS;MAC9B,CAAC;MACDM,KAAK,EAAE;QACLH,KAAK,EAAE;MACT,CAAC;MACDI,UAAU,EAAE,IAAI,CAAC;IACnB,CAAC;;IAED;IACA1B,MAAM,CAAC2B,OAAO,CAACnB,QAAQ,CAACoB,OAAO,EAAEnB,IAAI,EAAEY,MAAM,CAAC;;IAE9C;IACArB,MAAM,CAAC6B,OAAO,CAACrB,QAAQ,CAACoB,OAAO,EAAE;MAAEE,MAAM,EAAE,KAAK;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC,CACzEC,IAAI,CAACC,OAAO,IAAI;MACf,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACxDF,UAAU,CAACG,GAAG,GAAGJ,OAAO;;MAExB;MACA1B,QAAQ,CAACoB,OAAO,CAACW,KAAK,CAACC,OAAO,GAAG,MAAM;IACzC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACpC,OAAO,EAAEC,UAAU,CAAC,CAAC;EAEzB;IAAA;IAAS;IACPL,OAAA;MAAA0C,QAAA,gBACE1C,OAAA;QAAK2C,GAAG,EAAErC;MAAS;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC1B/C,OAAA;QAAKgD,EAAE,EAAC,YAAY;QAACC,GAAG,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClC;AAEV;AAAC5C,EAAA,CApDQF,KAAK;AAAAiD,EAAA,GAALjD,KAAK;AAsDd,eAAeA,KAAK;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}