{"ast":null,"code":"import _slicedToArray from\"/home/user/Documents/gala-bori/Submission/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button}from'reactstrap';import{useNavigate,useSearchParams}from'react-router-dom';import{useState,useEffect,useRef}from'react';import{AgGridReact}from'ag-grid-react';import\"ag-grid-community/styles/ag-grid.css\";import\"ag-grid-community/styles/ag-theme-balham.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var columnDefs=[//Define columns for ag Grid Table\n{headerName:'Role',field:'category'},{headerName:'Name',field:'name'},{headerName:'Characters',field:'characters',cellRenderer:function cellRenderer(_ref){var value=_ref.value;return value.join(', ');}}];export default function Movie(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),movie=_useState2[0],setMovie=_useState2[1];var navigate=useNavigate();var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];var imdb=searchParams.get(\"imdbID\");var url=\"http://sefdb02.qut.edu.au:3000/movies/data/\".concat(imdb);var gridApiRef=useRef(null);useEffect(function(){//Get Movie data and handle any errors\nfetch(url).then(function(res){if(res.status===200){return res.json();}else if(res.status===400){throw new Error(\"Invalid query parameters:\");}else if(res.status===404){throw new Error(\"No record exists of a movie with this ID\");}else if(res.status===429){throw new Error(\"Too many requests, please try again later.\");}else{throw new Error(\"Request failed, something is very wrong...\");}}).then(function(data){setMovie(data);}).catch(function(error){alert(error.message);console.log(error);//Display/log any errors\n});},[imdb,url]);var formatBoxOffice=function formatBoxOffice(value){//Formats returned boxoffice value to currency\nreturn value.toLocaleString(undefined,{style:'currency',currency:'USD'});};var formatRating=function formatRating(source,value){//Formats returned rating to % etc\nif(source===\"Internet Movie Database\"){return\"\".concat(value,\"/10\");}else if(source===\"Rotten Tomatoes\"){return\"\".concat(value,\"%\");}else if(source===\"Metacritic\"){return\"\".concat(value,\"/100\");}else{return value;}};return/*#__PURE__*/ (//Renders Ag Grid table, back button, HTML/Image\n_jsxs(\"div\",{className:\"home-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[movie.title,\" (\",movie.year,\")\"]}),/*#__PURE__*/_jsx(\"img\",{src:movie.poster,alt:\"\".concat(movie.title,\" Poster\")}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Runtime:\"}),\" \",movie.runtime,\" minutes\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Genres:\"}),\" \",movie.genres&&movie.genres.join(\", \")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Country:\"}),\" \",movie.country]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Box Office:\"}),\" \",movie.boxoffice?formatBoxOffice(movie.boxoffice):\"N/A\"]}),/*#__PURE__*/_jsx(\"p\",{children:movie.plot}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Ratings:\"})}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',padding:0},children:movie.ratings&&movie.ratings.map(function(rating,index){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[rating.source,\":\"]}),\" \",formatRating(rating.source,rating.value)]},index);})}),/*#__PURE__*/_jsx(Button,{color:\"info\",size:\"sm\",className:\"mt-3\",onClick:function onClick(){return navigate(\"/movies\");},children:\"Back\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Click on a person to get more information about their movies!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ag-theme-alpine\",style:{margin:'0 auto',maxWidth:'700px'},children:/*#__PURE__*/_jsx(AgGridReact,{columnDefs:columnDefs,rowData:movie.principals,rowHeight:45,headerHeight:40,domLayout:\"autoHeight\",onRowClicked:function onRowClicked(row){return navigate(\"/Actor?ID=\".concat(row.data.id));}//Sets URl so that it can be grabbed\n,onGridReady:function onGridReady(params){gridApiRef.current=params;}})})]}));}","map":{"version":3,"names":["Button","useNavigate","useSearchParams","useState","useEffect","useRef","AgGridReact","jsxs","_jsxs","jsx","_jsx","columnDefs","headerName","field","cellRenderer","_ref","value","join","Movie","_useState","_useState2","_slicedToArray","movie","setMovie","navigate","_useSearchParams","_useSearchParams2","searchParams","imdb","get","url","concat","gridApiRef","fetch","then","res","status","json","Error","data","catch","error","alert","message","console","log","formatBoxOffice","toLocaleString","undefined","style","currency","formatRating","source","className","children","title","year","src","poster","alt","runtime","genres","country","boxoffice","plot","listStyleType","padding","ratings","map","rating","index","color","size","onClick","margin","maxWidth","rowData","principals","rowHeight","headerHeight","domLayout","onRowClicked","row","id","onGridReady","params","current"],"sources":["/home/user/Documents/gala-bori/Submission/src/components/Movie.js"],"sourcesContent":["import { Button } from 'reactstrap';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-balham.css\";\n\nconst columnDefs = [ //Define columns for ag Grid Table\n    { headerName: 'Role', field: 'category' },\n    { headerName: 'Name', field: 'name' },\n    { headerName: 'Characters', field: 'characters', cellRenderer: ({ value }) => value.join(', ') },\n];\n\nexport default function Movie() {\n    const [movie, setMovie] = useState({});\n    const navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n    const imdb = searchParams.get(\"imdbID\");\n    const url = `http://sefdb02.qut.edu.au:3000/movies/data/${imdb}`;\n\n    const gridApiRef = useRef(null);\n\n    useEffect(() => {//Get Movie data and handle any errors\n        fetch(url)\n            .then((res) => {\n                if (res.status === 200) {\n                    return res.json();\n                } else if (res.status === 400) {\n                    throw new Error(\"Invalid query parameters:\");\n                } else if (res.status === 404) {\n                    throw new Error(\"No record exists of a movie with this ID\");\n                } else if (res.status === 429) {\n                    throw new Error(\"Too many requests, please try again later.\");\n                } else {\n                    throw new Error(\"Request failed, something is very wrong...\");\n                }\n            })\n            .then(data => {\n                setMovie(data);\n            })\n            .catch((error) => {\n                alert(error.message);\n                console.log(error); //Display/log any errors\n            });\n    }, [imdb, url]);\n\n    const formatBoxOffice = (value) => { //Formats returned boxoffice value to currency\n        return value.toLocaleString(undefined, {\n            style: 'currency',\n            currency: 'USD',\n        });\n    };\n\n    const formatRating = (source, value) => { //Formats returned rating to % etc\n        if (source === \"Internet Movie Database\") {\n            return `${value}/10`;\n        } else if (source === \"Rotten Tomatoes\") {\n            return `${value}%`;\n        } else if (source === \"Metacritic\") {\n            return `${value}/100`;\n        } else {\n            return value;\n        }\n    };\n\n    return ( //Renders Ag Grid table, back button, HTML/Image\n        <div className='home-container'>\n            <h2>{movie.title} ({movie.year})</h2>\n            <img src={movie.poster} alt={`${movie.title} Poster`} />\n            <p><strong>Runtime:</strong> {movie.runtime} minutes</p>\n            <p><strong>Genres:</strong> {movie.genres && movie.genres.join(\", \")}</p>\n            <p><strong>Country:</strong> {movie.country}</p>\n            <p><strong>Box Office:</strong> {movie.boxoffice ? formatBoxOffice(movie.boxoffice) : \"N/A\"}</p>\n            <p>{movie.plot}</p>\n            <p><strong>Ratings:</strong></p>\n            <ul style={{ listStyleType: 'none', padding: 0 }}>\n                {movie.ratings && movie.ratings.map((rating, index) => (\n                    <li key={index}><strong>{rating.source}:</strong> {formatRating(rating.source, rating.value)}</li>\n                ))}\n            </ul>\n            <Button\n                color=\"info\"\n                size=\"sm\"\n                className=\"mt-3\"\n                onClick={() => navigate(\"/movies\")}\n            >\n                Back\n            </Button>\n            <h3>Click on a person to get more information about their movies!</h3>\n\n            <div className=\"ag-theme-alpine\" style={{ margin: '0 auto', maxWidth: '700px' }}>\n                <AgGridReact\n                    columnDefs={columnDefs}\n                    rowData={movie.principals}\n                    rowHeight={45}\n                    headerHeight={40}\n                    domLayout=\"autoHeight\"\n                    onRowClicked={row => navigate(`/Actor?ID=${row.data.id}`)} //Sets URl so that it can be grabbed\n                    onGridReady={params => {\n                        gridApiRef.current = params;\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}