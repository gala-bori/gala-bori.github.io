{"ast":null,"code":"import _slicedToArray from\"/home/user/Documents/gala-bori/Submission/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import'bootstrap';import{useNavigate}from'react-router-dom';import{AgGridReact}from\"ag-grid-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Movies(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchYear=_useState4[0],setSearchYear=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),rowData=_useState6[0],setRowData=_useState6[1];var navigate=useNavigate();var columns=[//Define columns for Ag Table\n{headerName:\"Title\",field:\"title\",sortable:true},{headerName:\"Year\",field:\"year\",sortable:true},{headerName:\"IMDB Rating\",field:\"imdbRating\",sortable:true},{headerName:\"RottenTomatoes\",field:\"rottenTomatoesRating\",sortable:true},{headerName:\"Metacritic\",field:\"metacriticRating\",sortable:true},{headerName:\"Classification\",field:\"classification\",sortable:true}];useEffect(function(){//Initate GET for movie by title and or year. \nvar url=\"http://sefdb02.qut.edu.au:3000/movies/search?title=\".concat(searchValue,\"&year=\").concat(searchYear);fetch(url).then(function(res){if(res.status===200){return res.json();}else if(res.status===400){throw new Error(\"Invalid query parameters:\");}else if(res.status===404){throw new Error(\"No record exists of a movie with this ID\");}else if(res.status===429){throw new Error(\"Too many requests, please try again later.\");}else{throw new Error(\"Request failed, something is very wrong...\");}}).then(function(data){return data.data;}).then(function(data){return data.map(function(movie){return{//Assign returned value to variables\ntitle:movie.title,year:movie.year,classification:movie.classification,imdbID:movie.imdbID,rottenTomatoesRating:movie.rottenTomatoesRating,metacriticRating:movie.metacriticRating,imdbRating:movie.imdbRating};});}).then(function(movies){setRowData(movies);}).catch(function(error){alert(error.message);console.log(error);//Display/log any errors\n});},[searchValue,searchYear]);var rowCount=rowData.length;return/*#__PURE__*/ (//Renders two search boxes, Ag Grid table and conditional HTML\n_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:[/*#__PURE__*/_jsxs(\"h1\",{children:[searchYear,\" \",searchValue,/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchValue,onChange:function onChange(x){return setSearchValue(x.target.value);},placeholder:\"Enter Movie Title!\",className:\"form-control custom-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:searchYear,onChange:function onChange(x){return setSearchYear(x.target.value);},placeholder:\"Enter Movie Year!\",inputMode:\"numeric\",pattern:\"\\\\d*\",className:\"form-control custom-input\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a movie...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ag-theme-balham\",style:{height:\"800px\",width:\"100%\",maxWidth:\"1250px\"},children:/*#__PURE__*/_jsx(AgGridReact,{columnDefs:columns,rowData:rowData,onRowClicked:function onRowClicked(row){return navigate(\"/Movie?imdbID=\".concat(row.data.imdbID));}//Change URL such that it can be grabbed\n,domLayout:\"normal\"})}),rowCount>=100?/*#__PURE__*/ //Display text if more then 100 results...\n_jsx(\"p\",{children:\"Displaying the first 100 Results!\"}):/*#__PURE__*/_jsxs(\"h3\",{children:[rowCount,\" Results Found!\"]})]}));}export default Movies;","map":{"version":3,"names":["useState","useEffect","useNavigate","AgGridReact","jsx","_jsx","jsxs","_jsxs","Movies","_useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useState3","_useState4","searchYear","setSearchYear","_useState5","_useState6","rowData","setRowData","navigate","columns","headerName","field","sortable","url","concat","fetch","then","res","status","json","Error","data","map","movie","title","year","classification","imdbID","rottenTomatoesRating","metacriticRating","imdbRating","movies","catch","error","alert","message","console","log","rowCount","length","style","display","flexDirection","alignItems","children","type","value","onChange","x","target","placeholder","className","inputMode","pattern","height","width","maxWidth","columnDefs","onRowClicked","row","domLayout"],"sources":["/home/user/Documents/gala-bori/Submission/src/components/Movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { AgGridReact } from \"ag-grid-react\";\n\nfunction Movies() {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchYear, setSearchYear] = useState('');\n  const [rowData, setRowData] = useState([]);\n  const navigate = useNavigate();\n\n  const columns = [ //Define columns for Ag Table\n    { headerName: \"Title\", field: \"title\", sortable: true },\n    { headerName: \"Year\", field: \"year\", sortable: true },\n    { headerName: \"IMDB Rating\", field: \"imdbRating\", sortable: true },\n    { headerName: \"RottenTomatoes\", field: \"rottenTomatoesRating\", sortable: true },\n    { headerName: \"Metacritic\", field: \"metacriticRating\", sortable: true },\n    { headerName: \"Classification\", field: \"classification\", sortable: true },\n  ];\n\n  useEffect(() => { //Initate GET for movie by title and or year. \n    const url = `http://sefdb02.qut.edu.au:3000/movies/search?title=${searchValue}&year=${searchYear}`;\n\n    fetch(url)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        } else if (res.status === 400) {\n          throw new Error(\"Invalid query parameters:\");\n        } else if (res.status === 404) {\n          throw new Error(\"No record exists of a movie with this ID\");\n        } else if (res.status === 429) {\n          throw new Error(\"Too many requests, please try again later.\");\n        } else {\n          throw new Error(\"Request failed, something is very wrong...\");\n        }\n      })\n      .then(data => data.data)\n      .then(data =>\n        data.map(movie => {\n          return { //Assign returned value to variables\n            title: movie.title,\n            year: movie.year,\n            classification: movie.classification,\n            imdbID: movie.imdbID,\n            rottenTomatoesRating: movie.rottenTomatoesRating,\n            metacriticRating: movie.metacriticRating,\n            imdbRating: movie.imdbRating,\n          };\n        }))\n      .then(movies => {\n        setRowData(movies);\n      })\n      .catch((error) => {\n        alert(error.message);\n        console.log(error); //Display/log any errors\n      });\n  }, [searchValue, searchYear])\n\n  const rowCount = rowData.length;\n\n  return ( //Renders two search boxes, Ag Grid table and conditional HTML\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <h1>\n        {searchYear} {searchValue}\n        <input\n          type=\"text\"\n          value={searchValue}\n          onChange={(x) => setSearchValue(x.target.value)}\n          placeholder=\"Enter Movie Title!\"\n          className=\"form-control custom-input\"\n        />\n        <input\n          type=\"number\"\n          value={searchYear}\n          onChange={(x) => setSearchYear(x.target.value)}\n          placeholder=\"Enter Movie Year!\"\n          inputMode=\"numeric\"\n          pattern=\"\\d*\"\n          className=\"form-control custom-input\"\n        />\n      </h1>\n      <p>Select a movie...</p>\n      <div\n        className=\"ag-theme-balham\"\n        style={{ height: \"800px\", width: \"100%\", maxWidth: \"1250px\" }}\n      >\n        <AgGridReact\n          columnDefs={columns}\n          rowData={rowData}\n          onRowClicked={row => navigate(`/Movie?imdbID=${row.data.imdbID}`)} //Change URL such that it can be grabbed\n          domLayout=\"normal\"\n        />\n      </div>\n      {rowCount >= 100 ? ( //Display text if more then 100 results...\n        <p>Displaying the first 100 Results!</p>\n      ) : (\n        <h3>{rowCount} Results Found!</h3>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}